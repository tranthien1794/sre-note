#user  nobody;
#worker_processes 1;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;



#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/json;

    # Enables or disables the use of underscores in client request header fields.
    # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the ignore_invalid_headers directive.
    # underscores_in_headers off;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

        # Log in JSON Format
        # log_format nginxlog_json escape=json '{ "timestamp": "$time_iso8601", '
        # '"remote_addr": "$remote_addr", '
        #  '"body_bytes_sent": $body_bytes_sent, '
        #  '"request_time": $request_time, '
        #  '"response_status": $status, '
        #  '"request": "$request", '
        #  '"request_method": "$request_method", '
        #  '"host": "$host",'
        #  '"upstream_addr": "$upstream_addr",'
        #  '"http_x_forwarded_for": "$http_x_forwarded_for",'
        #  '"http_referrer": "$http_referer", '
        #  '"http_user_agent": "$http_user_agent", '
        #  '"http_version": "$server_protocol", '
        #  '"nginx_access": true }';
        # access_log /dev/stdout nginxlog_json;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    access_log off;
    gzip  on;
    real_ip_header X-Real-Ip;
    set_real_ip_from 0.0.0.0/0;
    server {
        listen 80;
        server_name localhost;
    
        location / {
            content_by_lua_block{
                local cjson = require 'cjson'
                local geo = require 'resty.maxminddb'
                if not geo.initted() then
                    geo.init({
                        city = "/usr/local/openresty/nginx/GeoIP2-City.mmdb",
                        isp  = "/usr/local/openresty/nginx/GeoIP2-ISP.mmdb",
                      })
                end
                local res_city,err = geo.lookup("city",ngx.var.arg_ip or ngx.var.remote_addr) --support ipv6 e.g. 2001:4860:0:1001::3004:ef68
                local res_isp,err = geo.lookup("isp",ngx.var.arg_ip or ngx.var.remote_addr)
                if res_city == nil then
                    city = ''
                    country = ''
                    iso_code = ''
                else
                    if res_city['city'] == nil then
                        city = ''
                    else
                        city = res_city['city']['names']['en']
                    end
                    if res_city['country'] == nil then
                        country = ''
                    else
                        country = res_city['country']['iso_code']
                    end
                    if res_city['subdivisions'] == nil then
                        iso_code = ''
                    else
                        for k,v in ipairs(res_city['subdivisions']) do
                            iso_code = v['iso_code']
                            break
                        end
                    end
                end
                if res_isp == nil then
                    isp = ''
                else
                    isp = res_isp['isp']
                end

                local key = {
                    clientip = ngx.var.arg_ip or ngx.var.remote_addr,
                    country = country,
                    city = city,
                    isp = isp,
                    iso_code = iso_code,
                }
                ngx.say(cjson.encode(key))
                }
            }
        }
    # Don't reveal OpenResty version to clients.
    server_tokens off;
}
